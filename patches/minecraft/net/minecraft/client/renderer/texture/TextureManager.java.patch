--- ../src-base/minecraft/net/minecraft/client/renderer/texture/TextureManager.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/texture/TextureManager.java
@@ -20,7 +20,7 @@
 import org.apache.logging.log4j.Logger;
 
 @SideOnly(Side.CLIENT)
-public class TextureManager implements ITickable, IResourceManagerReloadListener
+public class TextureManager implements ITickable, net.minecraftforge.client.resource.ISensitiveResourceReloadListener
 {
     private static final Logger field_147646_a = LogManager.getLogger();
     public static final ResourceLocation field_194008_a = new ResourceLocation("");
@@ -137,17 +137,21 @@
 
         if (itextureobject != null)
         {
+            this.field_110585_a.remove(p_147645_1_); // Forge: fix MC-98707
             TextureUtil.func_147942_a(itextureobject.func_110552_b());
         }
     }
 
-    public void func_110549_a(IResourceManager p_110549_1_)
+    public void onResourceManagerReload(IResourceManager p_110549_1_, java.util.function.Predicate<net.minecraftforge.client.resource.IResourceType> resourcePredicate)
     {
+        if (!resourcePredicate.test(net.minecraftforge.client.resource.VanillaResourceType.TEXTURES)) return;
+        net.minecraftforge.fml.common.ProgressManager.ProgressBar bar = net.minecraftforge.fml.common.ProgressManager.push("Reloading Texture Manager", this.field_110585_a.keySet().size(), true);
         Iterator<Entry<ResourceLocation, ITextureObject>> iterator = this.field_110585_a.entrySet().iterator();
 
         while (iterator.hasNext())
         {
             Entry<ResourceLocation, ITextureObject> entry = (Entry)iterator.next();
+            bar.step(entry.getKey().toString());
             ITextureObject itextureobject = entry.getValue();
 
             if (itextureobject == TextureUtil.field_111001_a)
@@ -159,5 +163,6 @@
                 this.func_110579_a(entry.getKey(), itextureobject);
             }
         }
+        net.minecraftforge.fml.common.ProgressManager.pop(bar);
     }
 }
